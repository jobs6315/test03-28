#include<stdio.h>
int count_bit_one(int n)
{
	int count = 0;
	while (n)
	{
		if (n % 2 == 1)//一个数模2余1，便计数一次
		{
			count++;
		}
		n = n / 2;//原来的数除以2并赋值给n
	}
	return count;
}

int main()
{
	int a = 0;
	scanf_s("%d", &a);
	//写一个函数求a的二进制（补码）表示中有几个1
	int count = count_bit_one(a);
	printf("count=%d\n", count);
	return 0;
}
#include<stdio.h>
int count_bit_one(int n)
{
	int count = 0;
	int i = 0;
	for(i=0;i<32;i++)
		while (n)
		{
			if (((n >> i) & 1) == 1)
			{
				count++;
			}
		
	     }
	return count;
}
#
int main()
{
	int a = 0;
	scanf_s("%d", &a);
	//写一个函数求a的二进制（补码）表示中有几个1
	int count=count_bit_one(a);
	printf("count=%d\n", count);
	return 0;
}
int count_bit_one(int n)
{
	int count = 0;
	int i = 0;
	for(i=0;i<32;i++)
		while (n)
		{
			n = n & (n - 1);
			count++;
	     }
	return count;
}
int main()
{
	int a = 0;
	scanf_s("%d", &a);
	//写一个函数求a的二进制（补码）表示中有几个1
	int count=count_bit_one(a);
	printf("count=%d\n", count);
	return 0;
}
